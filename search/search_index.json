{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"QD_FWK Introduction Intro Enhance Links","title":"Introduction"},{"location":"#qd_fwk-introduction","text":"","title":"QD_FWK Introduction"},{"location":"#intro","text":"","title":"Intro"},{"location":"#enhance","text":"","title":"Enhance"},{"location":"#links","text":"","title":"Links"},{"location":"api-reference/ble_apis/","text":"BLE (API List)","title":"BluetoothLE"},{"location":"api-reference/ble_apis/#ble-api-list","text":"","title":"BLE (API List)"},{"location":"api-reference/cloud_apis/","text":"Cloud (API List)","title":"Cloud"},{"location":"api-reference/cloud_apis/#cloud-api-list","text":"","title":"Cloud (API List)"},{"location":"api-reference/ota_apis/","text":"OTA (API List)","title":"OTA"},{"location":"api-reference/ota_apis/#ota-api-list","text":"","title":"OTA (API List)"},{"location":"api-reference/wifi_apis/","text":"WI-FI (API List)","title":"WI-FI"},{"location":"api-reference/wifi_apis/#wi-fi-api-list","text":"","title":"WI-FI (API List)"},{"location":"application-guide/ble/","text":"BluetoothLE BLE Manager Descript How To... How to 1... How to 2...","title":"BluetoothLE"},{"location":"application-guide/ble/#bluetoothle","text":"","title":"BluetoothLE"},{"location":"application-guide/ble/#ble-manager","text":"Descript","title":"BLE Manager"},{"location":"application-guide/ble/#how-to","text":"How to 1... How to 2...","title":"How To..."},{"location":"application-guide/board_config/","text":"Board Configuration Descript","title":"Board Configuration"},{"location":"application-guide/board_config/#board-configuration","text":"Descript","title":"Board Configuration"},{"location":"application-guide/cloud/","text":"Cloud Cloud Template Descript Porting rule How To...","title":"Cloud"},{"location":"application-guide/cloud/#cloud","text":"","title":"Cloud"},{"location":"application-guide/cloud/#cloud-template","text":"Descript","title":"Cloud Template"},{"location":"application-guide/cloud/#porting-rule","text":"","title":"Porting rule"},{"location":"application-guide/cloud/#how-to","text":"","title":"How To..."},{"location":"application-guide/log_config/","text":"Log Configuration Descript How To..","title":"Log Configuration"},{"location":"application-guide/log_config/#log-configuration","text":"Descript","title":"Log Configuration"},{"location":"application-guide/log_config/#how-to","text":"","title":"How To.."},{"location":"application-guide/mp/","text":"MP","title":"MP"},{"location":"application-guide/mp/#mp","text":"","title":"MP"},{"location":"application-guide/ota/","text":"OTA OTA via BLE OTA via WI-FI Hot To... How to 1... How to 2...","title":"OTA"},{"location":"application-guide/ota/#ota","text":"","title":"OTA"},{"location":"application-guide/ota/#ota-via-ble","text":"","title":"OTA via BLE"},{"location":"application-guide/ota/#ota-via-wi-fi","text":"","title":"OTA via WI-FI"},{"location":"application-guide/ota/#hot-to","text":"How to 1... How to 2...","title":"Hot To..."},{"location":"application-guide/project_config/","text":"Project Configuration Descript About 'qd_config.h' Content 1.. About 'qd_module.h' Content 2..","title":"Project Configuration"},{"location":"application-guide/project_config/#project-configuration","text":"Descript","title":"Project Configuration"},{"location":"application-guide/project_config/#about-qd_configh","text":"Content 1..","title":"About 'qd_config.h'"},{"location":"application-guide/project_config/#about-qd_moduleh","text":"Content 2..","title":"About 'qd_module.h'"},{"location":"application-guide/wifi/","text":"WI-FI Descript of WI-FI manager & Network Manager & Auto-Connect WI-FI Manager WI-FI manager provide a easy way to control WI-FI Initialize Before using the WI-FI manager, please follow below steps to initiate. Step 1. Enable WI-FI manager #define WM_ENABLED (1) The definition been defined in qd_config.h in sys_config folder. Step 2. Add related files in Keil project Image Step 3. Register callback and init Add below program in app_main.c void APP_WmUnsolicitedCallback(T_WmUslctedEvtType tEvtType, T_OplErr tEvtRst, uint8_t *pu8Data, uint32_t u32DataLen) { // tEvtType refer to wifi_mngr_api.h switch(tEvtType) { case USLCTED_CB_EVT_WIFI_UP: { // wifi connected event break; } case USLCTED_CB_EVT_WIFI_DOWN: { // wifi disconnect event break; } case USLCTED_CB_EVT_WIFI_RESET: { // wifi reset event break; } case USLCTED_CB_EVT_GOT_IP: { // wifi got ip break; } } } void APP_WifiInitDoneIndCallback(T_OplErr tEvtRst) { APP_SendMessage(APP_EVT_WIFI_INIT_DONE, (uint8_t*)&tEvtRst, sizeof(T_OplErr)); } void APP_NetInit(void) { // register Wi-Fi unsolicited callback if(OPL_OK != Opl_Wifi_Uslctd_CB_Reg(APP_WmUnsolicitedCallback)) { OPL_LOG_ERRO(APP, \"Wi-Fi unsolicited callback regist fail\"); } // Wi-Fi manager initialize Opl_Wifi_Init_Req(APP_WifiInitDoneIndCallback); // user implement } Info The APP_NetInit() function create by default in app_main.c , it's for developer to fill the network related init function in it. Unsolicited callback & Indicate callback There're two types of callback function pointer can be assign to WI-FI manager Unsolicited callback - Used for recving unsolicited events from WI-FI, will happens in WI-FI connected/ disconnected/ reset/ got ip. Unsolicited callback carried... Event, Result, Data & DataLens (Descript) Indicate callback - Used for getting solicited events of each request to send to WI-FI manager (such as scan_req). Indicate callback carried... Result (Descript) Info Unsolicited callback & Indicate callback prototype located in wifi_mngr_api.h Network Manager Network manager can handling wifi manager & auto-connect interactive behavior to let user only care about triggering WI-FI scan request and connect request. Initialize Before using the network manager, please follow below steps to initiate. Step 1. Enable network manager #define WM_ENABLED (1) #define NM_ENABLED (1) #define AC_ENABLED (1) The definition been defined in qd_config.h in sys_config folder. Warning WM_ENABLED and AC_ENABLED are both required if using network manager. Step 2. Add related files in Keil project Image Step 3. Register callback and init Add below program in app_main.c void APP_NmUnsolicitedCallback(T_NmUslctdEvtType tEvtType, uint8_t *pu8Data, uint32_t u32DataLen) { // tEvtType refer to net_mngr_api.h switch(tEvtType) { case NM_USLCTD_EVT_NETWORK_UP: { // wifi connected & got ip event break; } case NM_USLCTD_EVT_NETWORK_DOWN: { // wifi disconnect event break; } case NM_USLCTD_EVT_NETWORK_RESET: { // wifi reset event break; } default: { // should not be here break; } } } void APP_NetInit(void) { // Network manager initialize (auto-connect enable) APP_NmInit(true, &APP_NmUnsolicitedCallback); // user implement } The first character of APP_NmInit() is to enable/disable auto-connect at started. If set as enable - the auto-connect will directly content in sequence. If set as disable - the auto-connect won't active. Info The APP_NetInit() function create by default in app_main.c , it's for developer to fill the network related init function in it. Unsolicited callback & Indicate callback There're two types of callback function pointer can be assign to Network manager Unsolicited callback - Used for recving unsolicited events from WI-FI, will happens in WI-FI connected/ disconnected/ reset. Unsolicited callback carried... Event, Result, Data & DataLens (Descript) Indicate callback - Used for getting solicited events of each request to send to WI-FI manager (such as scan_req). Indicate callback carried... Result (Descript) Info Unsolicited callback & Indicate callback prototype located in nm_mngr_api.h Auto-Connect The auto-connect will do automatically connect to stored AP while the WI-FI connection offline, and will periodcially to retry till connected or been disable. Initialize Enable auto-connect and add related file into Keil project #define WM_ENABLED (1) #define AC_ENABLED (1) Image How To... How to 1... How to 2...","title":"WI-Fi"},{"location":"application-guide/wifi/#wi-fi","text":"Descript of WI-FI manager & Network Manager & Auto-Connect","title":"WI-FI"},{"location":"application-guide/wifi/#wi-fi-manager","text":"WI-FI manager provide a easy way to control WI-FI","title":"WI-FI Manager"},{"location":"application-guide/wifi/#initialize","text":"Before using the WI-FI manager, please follow below steps to initiate.","title":"Initialize"},{"location":"application-guide/wifi/#step-1-enable-wi-fi-manager","text":"#define WM_ENABLED (1) The definition been defined in qd_config.h in sys_config folder.","title":"Step 1. Enable WI-FI manager"},{"location":"application-guide/wifi/#step-2-add-related-files-in-keil-project","text":"Image","title":"Step 2. Add related files in Keil project"},{"location":"application-guide/wifi/#step-3-register-callback-and-init","text":"Add below program in app_main.c void APP_WmUnsolicitedCallback(T_WmUslctedEvtType tEvtType, T_OplErr tEvtRst, uint8_t *pu8Data, uint32_t u32DataLen) { // tEvtType refer to wifi_mngr_api.h switch(tEvtType) { case USLCTED_CB_EVT_WIFI_UP: { // wifi connected event break; } case USLCTED_CB_EVT_WIFI_DOWN: { // wifi disconnect event break; } case USLCTED_CB_EVT_WIFI_RESET: { // wifi reset event break; } case USLCTED_CB_EVT_GOT_IP: { // wifi got ip break; } } } void APP_WifiInitDoneIndCallback(T_OplErr tEvtRst) { APP_SendMessage(APP_EVT_WIFI_INIT_DONE, (uint8_t*)&tEvtRst, sizeof(T_OplErr)); } void APP_NetInit(void) { // register Wi-Fi unsolicited callback if(OPL_OK != Opl_Wifi_Uslctd_CB_Reg(APP_WmUnsolicitedCallback)) { OPL_LOG_ERRO(APP, \"Wi-Fi unsolicited callback regist fail\"); } // Wi-Fi manager initialize Opl_Wifi_Init_Req(APP_WifiInitDoneIndCallback); // user implement } Info The APP_NetInit() function create by default in app_main.c , it's for developer to fill the network related init function in it.","title":"Step 3. Register callback and init"},{"location":"application-guide/wifi/#unsolicited-callback-indicate-callback","text":"There're two types of callback function pointer can be assign to WI-FI manager Unsolicited callback - Used for recving unsolicited events from WI-FI, will happens in WI-FI connected/ disconnected/ reset/ got ip. Unsolicited callback carried... Event, Result, Data & DataLens (Descript) Indicate callback - Used for getting solicited events of each request to send to WI-FI manager (such as scan_req). Indicate callback carried... Result (Descript) Info Unsolicited callback & Indicate callback prototype located in wifi_mngr_api.h","title":"Unsolicited callback &amp; Indicate callback"},{"location":"application-guide/wifi/#network-manager","text":"Network manager can handling wifi manager & auto-connect interactive behavior to let user only care about triggering WI-FI scan request and connect request.","title":"Network Manager"},{"location":"application-guide/wifi/#initialize_1","text":"Before using the network manager, please follow below steps to initiate.","title":"Initialize"},{"location":"application-guide/wifi/#step-1-enable-network-manager","text":"#define WM_ENABLED (1) #define NM_ENABLED (1) #define AC_ENABLED (1) The definition been defined in qd_config.h in sys_config folder. Warning WM_ENABLED and AC_ENABLED are both required if using network manager.","title":"Step 1. Enable network manager"},{"location":"application-guide/wifi/#step-2-add-related-files-in-keil-project_1","text":"Image","title":"Step 2. Add related files in Keil project"},{"location":"application-guide/wifi/#step-3-register-callback-and-init_1","text":"Add below program in app_main.c void APP_NmUnsolicitedCallback(T_NmUslctdEvtType tEvtType, uint8_t *pu8Data, uint32_t u32DataLen) { // tEvtType refer to net_mngr_api.h switch(tEvtType) { case NM_USLCTD_EVT_NETWORK_UP: { // wifi connected & got ip event break; } case NM_USLCTD_EVT_NETWORK_DOWN: { // wifi disconnect event break; } case NM_USLCTD_EVT_NETWORK_RESET: { // wifi reset event break; } default: { // should not be here break; } } } void APP_NetInit(void) { // Network manager initialize (auto-connect enable) APP_NmInit(true, &APP_NmUnsolicitedCallback); // user implement } The first character of APP_NmInit() is to enable/disable auto-connect at started. If set as enable - the auto-connect will directly content in sequence. If set as disable - the auto-connect won't active. Info The APP_NetInit() function create by default in app_main.c , it's for developer to fill the network related init function in it.","title":"Step 3. Register callback and init"},{"location":"application-guide/wifi/#unsolicited-callback-indicate-callback_1","text":"There're two types of callback function pointer can be assign to Network manager Unsolicited callback - Used for recving unsolicited events from WI-FI, will happens in WI-FI connected/ disconnected/ reset. Unsolicited callback carried... Event, Result, Data & DataLens (Descript) Indicate callback - Used for getting solicited events of each request to send to WI-FI manager (such as scan_req). Indicate callback carried... Result (Descript) Info Unsolicited callback & Indicate callback prototype located in nm_mngr_api.h","title":"Unsolicited callback &amp; Indicate callback"},{"location":"application-guide/wifi/#auto-connect","text":"The auto-connect will do automatically connect to stored AP while the WI-FI connection offline, and will periodcially to retry till connected or been disable.","title":"Auto-Connect"},{"location":"application-guide/wifi/#initialize_2","text":"Enable auto-connect and add related file into Keil project #define WM_ENABLED (1) #define AC_ENABLED (1) Image","title":"Initialize"},{"location":"application-guide/wifi/#how-to","text":"How to 1... How to 2...","title":"How To..."},{"location":"application-guide/wifi_provision_via_ble/","text":"WI-FI provision via BLE Descript Provision Sequence Seq How To... How To 1... How To 2...","title":"WI-FI Provision Via BLE"},{"location":"application-guide/wifi_provision_via_ble/#wi-fi-provision-via-ble","text":"Descript","title":"WI-FI provision via BLE"},{"location":"application-guide/wifi_provision_via_ble/#provision-sequence","text":"Seq","title":"Provision Sequence"},{"location":"application-guide/wifi_provision_via_ble/#how-to","text":"How To 1... How To 2...","title":"How To..."},{"location":"get_started/get_started/","text":"Get Started SDK download and install Content 1.. Start your first application Content 2.. Connect ot Dev-Kit Content 3.. Configuration setup Content 4.. Build project Content 5.. Download firmware Content 6.. Get log Content 7..","title":"Get Started"},{"location":"get_started/get_started/#get-started","text":"","title":"Get Started"},{"location":"get_started/get_started/#sdk-download-and-install","text":"Content 1..","title":"SDK download and install"},{"location":"get_started/get_started/#start-your-first-application","text":"Content 2..","title":"Start your first application"},{"location":"get_started/get_started/#connect-ot-dev-kit","text":"Content 3..","title":"Connect ot Dev-Kit"},{"location":"get_started/get_started/#configuration-setup","text":"Content 4..","title":"Configuration setup"},{"location":"get_started/get_started/#build-project","text":"Content 5..","title":"Build project"},{"location":"get_started/get_started/#download-firmware","text":"Content 6..","title":"Download firmware"},{"location":"get_started/get_started/#get-log","text":"Content 7..","title":"Get log"}]}